<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="ko" /><updated>2022-11-27T22:51:23+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Every Single Day</title><subtitle></subtitle><author><name>Dajeong Park</name></author><entry><title type="html">문자열 자르기</title><link href="http://localhost:4000/wiki/2022/11/27/cut-string.html" rel="alternate" type="text/html" title="문자열 자르기" /><published>2022-11-27T00:00:00+09:00</published><updated>2022-11-27T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/11/27/cut-string</id><content type="html" xml:base="http://localhost:4000/wiki/2022/11/27/cut-string.html"><![CDATA[<h3 id="문자열-자르기">문자열 자르기</h3>

<h4 id="1-stringsplit">1. String.split()</h4>
<ul>
  <li>지정한 구분자(정규표현식)로 문자열을 나눠 문자열 배열에 저장한다.</li>
  <li>공백 포함
<br /></li>
</ul>

<h4 id="2-stringtokenizer">2. StringTokenizer</h4>
<ul>
  <li>지정한 구분자(문자열)로 문자열을 나눈다.</li>
  <li>구분자 생략 시 공백이 디폴트</li>
  <li>생성자
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">StringTokenizer</span><span class="o">(</span><span class="nc">String</span> <span class="n">str</span><span class="o">)</span> <span class="c1">// 공백 구분자 사용</span>
<span class="nc">StringTokenizer</span><span class="o">(</span><span class="nc">String</span> <span class="n">str</span><span class="o">,</span> <span class="nc">String</span> <span class="n">delim</span><span class="o">)</span> <span class="c1">// 구분자 지정</span>
<span class="nc">StringTokenizer</span><span class="o">(</span><span class="nc">String</span> <span class="n">str</span><span class="o">,</span> <span class="nc">String</span> <span class="n">delim</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">returnDelims</span><span class="o">)</span> <span class="c1">// 구분자도 토큰에 포함</span>
</code></pre></div>    </div>
  </li>
  <li>메소드
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nextToken</span><span class="o">()</span>     <span class="c1">// 다음 토큰 반환 (이전 토큰은 삭제)</span>
<span class="n">hasMoreTokens</span><span class="o">()</span> <span class="c1">// 리턴할 토큰이 남아있으면 true, 없으면 false</span>
<span class="n">countTokens</span><span class="o">()</span>   <span class="c1">// 남아있는 토큰의 갯수</span>
</code></pre></div>    </div>
    <p><br /></p>
  </li>
</ul>

<h4 id="공통점">공통점</h4>
<ul>
  <li>지정한 구분자를 통해 문자열을 나눈다.
<br /></li>
</ul>

<h4 id="차이점">차이점</h4>
<p>|  | String.split() | StringTokenizer |
| — | — | — |
| 구분자 | 정규표현식 | 문자/문자열 |
| 빈 문자열 인식 | O | X |
| 결과값 | String[] | StringTokenizer → 반복문으로 출력 가능 |
<br /></p>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Method" /><summary type="html"><![CDATA[문자열 자르기]]></summary></entry><entry><title type="html">Map - getOrDefault(Object key, V defaultValue)</title><link href="http://localhost:4000/wiki/2022/10/31/map-getOrDefault.html" rel="alternate" type="text/html" title="Map - getOrDefault(Object key, V defaultValue)" /><published>2022-10-31T00:00:00+09:00</published><updated>2022-10-31T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/10/31/map-getOrDefault</id><content type="html" xml:base="http://localhost:4000/wiki/2022/10/31/map-getOrDefault.html"><![CDATA[<h3 id="map---getordefaultobject-key-v-defaultvalue">Map - getOrDefault(Object key, V defaultValue)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="no">V</span> <span class="nf">getOrDefault</span><span class="o">(</span><span class="nc">Object</span> <span class="n">key</span><span class="o">,</span> <span class="no">V</span> <span class="n">defaultValue</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">Node</span><span class="o">&lt;</span><span class="no">K</span><span class="o">,</span><span class="no">V</span><span class="o">&gt;</span> <span class="n">e</span><span class="o">;</span>
		<span class="k">return</span> <span class="o">(</span><span class="n">e</span> <span class="o">=</span> <span class="n">getNode</span><span class="o">(</span><span class="n">key</span><span class="o">))</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">?</span> <span class="n">defaultValue</span> <span class="o">:</span> <span class="n">e</span><span class="o">.</span><span class="na">value</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>key가 존재하면 key의 value를 반환하고, 없으면 설정한 디폴트 값을 반환한다.
<br /></li>
</ul>

<p><strong>사용 예시 (프로그래머스 level2 위장)</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span><span class="o">[][]</span> <span class="n">clothes1</span> <span class="o">=</span> <span class="o">/{/{</span><span class="s">"yellow_hat"</span><span class="o">,</span> <span class="s">"headgear"</span><span class="o">/},</span> 
			<span class="o">/{</span><span class="s">"blue_sunglasses"</span><span class="o">,</span> <span class="s">"eyewear"</span><span class="o">/},</span> 
			<span class="o">/{</span><span class="s">"green_turban"</span><span class="o">,</span> <span class="s">"headgear"</span><span class="o">/}/};</span>
<span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">clothes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
		<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">clothes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">],</span> <span class="n">map</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">clothes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">],</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>HashMap은 동일한 key에 value를 추가할 경우 value가 덮어쓰기 되기 때문에 getOrDefault() 메소드를 사용하여 예시처럼 카운트를 추가하는 등의 방법을 사용할 수 있다.</li>
</ul>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Map" /><category term="Method" /><summary type="html"><![CDATA[Map - getOrDefault(Object key, V defaultValue) public V getOrDefault(Object key, V defaultValue) { Node&lt;K,V&gt; e; return (e = getNode(key)) == null ? defaultValue : e.value; } key가 존재하면 key의 value를 반환하고, 없으면 설정한 디폴트 값을 반환한다.]]></summary></entry><entry><title type="html">LRU</title><link href="http://localhost:4000/wiki/2022/10/29/LRU.html" rel="alternate" type="text/html" title="LRU" /><published>2022-10-29T00:00:00+09:00</published><updated>2022-10-29T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/10/29/LRU</id><content type="html" xml:base="http://localhost:4000/wiki/2022/10/29/LRU.html"><![CDATA[<h3 id="lru">LRU</h3>

<ul>
  <li>LRU는 가장 오랫동안 참조되지 않은 페이지를 교체하는 방식이다.</li>
  <li>사용된지 가장 오래된 페이지는 앞으로도 사용될 확률이 낮다는 가설에 의해 만들어진 알고리즘이다.
<br /></li>
</ul>

<h4 id="lru의-원리">LRU의 원리</h4>
<ul>
  <li>캐시가 가득 찼을 때, 가장 오랫동안 참조되지 않은 페이지를 찾아서 없애는 방식으로 LRU를 구현할 수 있다.</li>
  <li>페이지를 새로 참조할 때마다 연결리스트의 맨 앞에 페이지 번호를 추가한다. 그러면 맨 뒤에 있는 페이지 번호가 가장 오랫동안 참조되지 않은 페이지 번호가 된다.</li>
  <li>캐시 크기가 3일 때 이미 3개의 페이지가 캐시에 들어있다면, 맨 뒤에 있는 페이지 번호 node를 지우고, 새로운 페이지 번호 node를 앞에 연결해주는 방식이다.</li>
  <li>LRU를 구현할 때는 Doubly Linked List를 사용하고, head에 가까운 노드일 수록 가장 최근에 참조된 페이지, tail에 가까운 node일 수록 가장 오랫동안 참조되지 않은 페이지를 의미한다. LRU의 개념에 따라 캐시 크기를 넘어간다면 tail에 가까운 페이지가 먼저 삭제되도록 한다.
<br /></li>
</ul>

<h4 id="cache-hitmiss">Cache Hit/Miss</h4>
<ul>
  <li><strong>Cache Hit</strong>: CPU가 참고하고자 하는 메모리가 캐시에 존재하고 있을 경우</li>
  <li><strong>Cache Miss</strong>: CPU가 참고하고자 하는 메모리가 캐시에 존재하지 않을 경우
<br /></li>
</ul>

<h4 id="hit-ratiomiss-ratio">Hit Ratio/Miss Ratio</h4>
<ul>
  <li><strong>Hit Ratio</strong>: Cache Hit / (Cache Hit + Cache Miss)</li>
  <li><strong>Miss Ratio</strong>: Cache Miss / (Cache Hit + Cache Miss)
<br /></li>
</ul>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Algorithm" /><category term="Cache" /><summary type="html"><![CDATA[LRU]]></summary></entry><entry><title type="html">Thymeleaf와 @RestController</title><link href="http://localhost:4000/wiki/2022/10/17/thymeleaf-rest-controller.html" rel="alternate" type="text/html" title="Thymeleaf와 @RestController" /><published>2022-10-17T00:00:00+09:00</published><updated>2022-10-17T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/10/17/thymeleaf-rest-controller</id><content type="html" xml:base="http://localhost:4000/wiki/2022/10/17/thymeleaf-rest-controller.html"><![CDATA[<h3 id="thymeleaf와-restcontroller">Thymeleaf와 @RestController</h3>

<p>테스트를 해보려고 테스트 컨트롤러에 @RestController을 설정한 후 String으로 view 이름을 리턴했더니 화면에 입력한 view 이름이 그대로 나왔다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestController</span> <span class="o">{</span>

    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/sample"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">hello</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"sample"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="왜-그럴까">왜 그럴까?</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">@RestController</code>에는 <code class="language-plaintext highlighter-rouge">@Controller</code> 애노테이션과 <code class="language-plaintext highlighter-rouge">@ResponseBody</code> 애노테이션이 포함되어 있다. Controller에서 페이지 렌더링과 Json 데이터를 함께 리턴해야 할 때 사용한다.</li>
  <li><code class="language-plaintext highlighter-rouge">@Controller</code>는 리턴 값이 String이라면 view 이름으로 인식하여 view를 찾아 렌더링 한다.
    <ul>
      <li>페이지 이동(<code class="language-plaintext highlighter-rouge">@Controller</code>), Json 데이터 리턴(<code class="language-plaintext highlighter-rouge">@ResponseBody</code>)</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">@ResponseBody</code>: 자바 객체를 HTTP 요청의 body 내용으로 매핑하는 역할을 하는 애노테이션
<br /></li>
</ul>

<h4 id="형태">형태</h4>
<p><code class="language-plaintext highlighter-rouge">@Controller</code></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Target</span><span class="o">(</span><span class="nc">ElementType</span><span class="o">.</span><span class="na">TYPE</span><span class="o">)</span>
<span class="nd">@Retention</span><span class="o">(</span><span class="nc">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
<span class="nd">@Documented</span>
<span class="nd">@Component</span>
<span class="kd">public</span> <span class="nd">@interface</span> <span class="nc">Controller</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">@RestController</code></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Target</span><span class="o">(</span><span class="nc">ElementType</span><span class="o">.</span><span class="na">TYPE</span><span class="o">)</span>
<span class="nd">@Retention</span><span class="o">(</span><span class="nc">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
<span class="nd">@Documented</span>
<span class="nd">@Controller</span>
<span class="nd">@ResponseBody</span>
<span class="kd">public</span> <span class="nd">@interface</span> <span class="nc">RestController</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="해결-방법">해결 방법</h4>
<p><code class="language-plaintext highlighter-rouge">ModelAndView</code>를 사용하여 <code class="language-plaintext highlighter-rouge">setViewName()</code>에는 이동할 view 이름, <code class="language-plaintext highlighter-rouge">addObject()</code> 등에는 사용할 변수명을 입력해주면, <code class="language-plaintext highlighter-rouge">@RestController</code>나 <code class="language-plaintext highlighter-rouge">@Controller</code> 애노테이션 둘 다 상관없이 동작한다.</p>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Spring" /><category term="Annotation" /><category term="Thymeleaf" /><summary type="html"><![CDATA[Thymeleaf와 @RestController]]></summary></entry><entry><title type="html">배열 자르기</title><link href="http://localhost:4000/wiki/2022/10/08/slice-array.html" rel="alternate" type="text/html" title="배열 자르기" /><published>2022-10-08T00:00:00+09:00</published><updated>2022-10-08T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/10/08/slice-array</id><content type="html" xml:base="http://localhost:4000/wiki/2022/10/08/slice-array.html"><![CDATA[<h3 id="배열-자르기">배열 자르기</h3>

<h4 id="1-stream의-skip과-limit">1. Stream의 skip과 limit</h4>
<p><strong>Arrays.stream.skip(num)</strong></p>
<ul>
  <li>skip은 숫자(num)만큼 아이템을 건너뛴 다음 그 뒤의 아이템으로 새로운 스트림을 생성한다.
<strong>Arrays.stream.limit(num)</strong></li>
  <li>limit은 지정한 개수(num)만큼 가져와서 새로운 스트림을 리턴한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span><span class="o">[]</span> <span class="n">array</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">};</span>

<span class="kt">int</span><span class="o">[]</span> <span class="n">skip</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">array</span><span class="o">)</span>
						<span class="o">.</span><span class="na">skip</span><span class="o">(</span><span class="mi">4</span><span class="o">)</span>
						<span class="o">.</span><span class="na">toArray</span><span class="o">();</span> <span class="c1">// [5, 6, 7, 8, 9, 10]</span>

<span class="kt">int</span><span class="o">[]</span> <span class="n">limit</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">array</span><span class="o">)</span>
							<span class="o">.</span><span class="na">limit</span><span class="o">(</span><span class="mi">4</span><span class="o">)</span>
							<span class="o">.</span><span class="na">toArray</span><span class="o">();</span> <span class="c1">// [1, 2, 3, 4]</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="2-copyofrange">2. copyOfRange</h4>
<ul>
  <li>i번째 숫자부터 j번째 숫자까지 자를 때 사용할 수 있다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span><span class="o">[]</span> <span class="n">array</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">};</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">temp</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">copyOfRange</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">);</span> <span class="c1">// [3, 4, 5]</span>
</code></pre></div></div>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Array" /><category term="Method" /><summary type="html"><![CDATA[배열 자르기]]></summary></entry><entry><title type="html">피보나치 수열 이해하기</title><link href="http://localhost:4000/wiki/2022/10/05/fibonacci.html" rel="alternate" type="text/html" title="피보나치 수열 이해하기" /><published>2022-10-05T00:00:00+09:00</published><updated>2022-10-05T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/10/05/fibonacci</id><content type="html" xml:base="http://localhost:4000/wiki/2022/10/05/fibonacci.html"><![CDATA[<h3 id="피보나치-수열">피보나치 수열</h3>

<ul>
  <li>피보나치 수열은 재귀 함수의 대표적인 예시로, 첫째 및 둘째 항이 1이며 그 뒤의 모든 항은 바로 앞 두 항의 합인 수열이다.
    <ul>
      <li>F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2)</li>
      <li><strong>재귀 함수</strong>: 자기 자신을 다시 호출해 작업을 수행하는 함수
        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">fibonacci</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
  <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="o">)</span> <span class="o">{</span>			
      <span class="k">return</span> <span class="nf">fibonacci</span><span class="o">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="n">fibonacci</span><span class="o">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>        </div>
        <p><br /></p>
      </li>
    </ul>
  </li>
</ul>

<h4 id="프로그래머스-피보나치-수-풀이">프로그래머스 피보나치 수 풀이</h4>
<p><strong>원래 코드</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
	<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">second</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">answer</span> <span class="o">=</span> <span class="o">(</span><span class="n">first</span> <span class="o">+</span> <span class="n">second</span><span class="o">);</span>
			<span class="n">first</span> <span class="o">=</span> <span class="n">second</span><span class="o">;</span>
			<span class="n">second</span> <span class="o">=</span> <span class="n">answer</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
		<span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
  <span class="o">}</span>
	<span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>이 코드를 제출했더니 7번부터 오답이 나왔다.. 그래서 한참 고민하다가 질문하기 페이지를 봤는데 좋은 답변을 달아주셔서 참고했다.
  <img src="../../../../assets/images/posts/fibonacci-reference.png" />
    <ul>
      <li><strong>정리</strong>: 자료형의 크기에 제한이 있는 언어를 사용할 경우 (A + B) % C == ((A % C) + (B % C)) % C라는 모듈러 연산의 성질을 이용하여, 계산 결과에 1234567으로 나눈 나머지를 대신 넣는 것으로 int 범위 내에 항상 값이 존재하도록 보장할 수 있다.</li>
    </ul>
  </li>
</ul>

<p><strong>수정 코드</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
	<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">second</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">answer</span> <span class="o">=</span> <span class="o">(</span><span class="n">first</span> <span class="o">+</span> <span class="n">second</span><span class="o">)</span> <span class="o">%</span> <span class="mi">1234567</span><span class="o">;</span>
			<span class="n">first</span> <span class="o">=</span> <span class="n">second</span><span class="o">;</span>
			<span class="n">second</span> <span class="o">=</span> <span class="n">answer</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
		<span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
  <span class="o">}</span>
	<span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Algorithm" /><summary type="html"><![CDATA[피보나치 수열]]></summary></entry><entry><title type="html">아스키코드 문자 ↔ 숫자</title><link href="http://localhost:4000/wiki/2022/09/25/ascii-to-string.html" rel="alternate" type="text/html" title="아스키코드 문자 ↔ 숫자" /><published>2022-09-25T00:00:00+09:00</published><updated>2022-09-25T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/09/25/ascii-to-string</id><content type="html" xml:base="http://localhost:4000/wiki/2022/09/25/ascii-to-string.html"><![CDATA[<h3 id="아스키코드-문자--숫자">아스키코드 문자 ↔ 숫자</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: center">10</th>
      <th style="text-align: center">16</th>
      <th style="text-align: center">문자</th>
      <th style="text-align: center">10</th>
      <th style="text-align: center">16</th>
      <th style="text-align: center">문자</th>
      <th style="text-align: center">10</th>
      <th style="text-align: center">16</th>
      <th style="text-align: center">문자</th>
      <th style="text-align: center">10</th>
      <th style="text-align: center">16</th>
      <th style="text-align: center">문자</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">0x00</td>
      <td style="text-align: center">NUL</td>
      <td style="text-align: center">32</td>
      <td style="text-align: center">0x20</td>
      <td style="text-align: center">SP</td>
      <td style="text-align: center">64</td>
      <td style="text-align: center">0x40</td>
      <td style="text-align: center">@</td>
      <td style="text-align: center">96</td>
      <td style="text-align: center">0x60</td>
      <td style="text-align: center">`</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0x01</td>
      <td style="text-align: center">SOH</td>
      <td style="text-align: center">33</td>
      <td style="text-align: center">0x21</td>
      <td style="text-align: center">!</td>
      <td style="text-align: center">65</td>
      <td style="text-align: center">0x41</td>
      <td style="text-align: center">A</td>
      <td style="text-align: center">97</td>
      <td style="text-align: center">0x61</td>
      <td style="text-align: center">a</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">0x02</td>
      <td style="text-align: center">STX</td>
      <td style="text-align: center">34</td>
      <td style="text-align: center">0x22</td>
      <td style="text-align: center">”</td>
      <td style="text-align: center">66</td>
      <td style="text-align: center">0x42</td>
      <td style="text-align: center">B</td>
      <td style="text-align: center">98</td>
      <td style="text-align: center">0x62</td>
      <td style="text-align: center">b</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">0x03</td>
      <td style="text-align: center">ETX</td>
      <td style="text-align: center">35</td>
      <td style="text-align: center">0x23</td>
      <td style="text-align: center">#</td>
      <td style="text-align: center">67</td>
      <td style="text-align: center">0x43</td>
      <td style="text-align: center">C</td>
      <td style="text-align: center">99</td>
      <td style="text-align: center">0x63</td>
      <td style="text-align: center">c</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">0x04</td>
      <td style="text-align: center">EOT</td>
      <td style="text-align: center">36</td>
      <td style="text-align: center">0x24</td>
      <td style="text-align: center">$</td>
      <td style="text-align: center">68</td>
      <td style="text-align: center">0x44</td>
      <td style="text-align: center">D</td>
      <td style="text-align: center">100</td>
      <td style="text-align: center">0x64</td>
      <td style="text-align: center">d</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">0x05</td>
      <td style="text-align: center">ENQ</td>
      <td style="text-align: center">37</td>
      <td style="text-align: center">0x25</td>
      <td style="text-align: center">%</td>
      <td style="text-align: center">69</td>
      <td style="text-align: center">0x45</td>
      <td style="text-align: center">E</td>
      <td style="text-align: center">101</td>
      <td style="text-align: center">0x65</td>
      <td style="text-align: center">e</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">0x06</td>
      <td style="text-align: center">ACK</td>
      <td style="text-align: center">38</td>
      <td style="text-align: center">0x26</td>
      <td style="text-align: center">&amp;</td>
      <td style="text-align: center">70</td>
      <td style="text-align: center">0x46</td>
      <td style="text-align: center">F</td>
      <td style="text-align: center">102</td>
      <td style="text-align: center">0x66</td>
      <td style="text-align: center">f</td>
    </tr>
    <tr>
      <td style="text-align: center">7</td>
      <td style="text-align: center">0x07</td>
      <td style="text-align: center">BEL</td>
      <td style="text-align: center">39</td>
      <td style="text-align: center">0x27</td>
      <td style="text-align: center">’</td>
      <td style="text-align: center">71</td>
      <td style="text-align: center">0x47</td>
      <td style="text-align: center">G</td>
      <td style="text-align: center">103</td>
      <td style="text-align: center">0x67</td>
      <td style="text-align: center">g</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">0x08</td>
      <td style="text-align: center">BS</td>
      <td style="text-align: center">40</td>
      <td style="text-align: center">0x28</td>
      <td style="text-align: center">(</td>
      <td style="text-align: center">72</td>
      <td style="text-align: center">0x48</td>
      <td style="text-align: center">H</td>
      <td style="text-align: center">104</td>
      <td style="text-align: center">0x68</td>
      <td style="text-align: center">h</td>
    </tr>
    <tr>
      <td style="text-align: center">9</td>
      <td style="text-align: center">0x09</td>
      <td style="text-align: center">HT</td>
      <td style="text-align: center">41</td>
      <td style="text-align: center">0x29</td>
      <td style="text-align: center">)</td>
      <td style="text-align: center">73</td>
      <td style="text-align: center">0x49</td>
      <td style="text-align: center">I</td>
      <td style="text-align: center">105</td>
      <td style="text-align: center">0x69</td>
      <td style="text-align: center">i</td>
    </tr>
    <tr>
      <td style="text-align: center">10</td>
      <td style="text-align: center">0x0A</td>
      <td style="text-align: center">LF</td>
      <td style="text-align: center">42</td>
      <td style="text-align: center">0x2A</td>
      <td style="text-align: center">*</td>
      <td style="text-align: center">74</td>
      <td style="text-align: center">0x4A</td>
      <td style="text-align: center">J</td>
      <td style="text-align: center">106</td>
      <td style="text-align: center">0x6A</td>
      <td style="text-align: center">j</td>
    </tr>
    <tr>
      <td style="text-align: center">11</td>
      <td style="text-align: center">0x0B</td>
      <td style="text-align: center">VT</td>
      <td style="text-align: center">43</td>
      <td style="text-align: center">0x2B</td>
      <td style="text-align: center">+</td>
      <td style="text-align: center">75</td>
      <td style="text-align: center">0x4B</td>
      <td style="text-align: center">K</td>
      <td style="text-align: center">107</td>
      <td style="text-align: center">0x6B</td>
      <td style="text-align: center">k</td>
    </tr>
    <tr>
      <td style="text-align: center">12</td>
      <td style="text-align: center">0x0C</td>
      <td style="text-align: center">FF</td>
      <td style="text-align: center">44</td>
      <td style="text-align: center">0x2C</td>
      <td style="text-align: center">,</td>
      <td style="text-align: center">76</td>
      <td style="text-align: center">0x4C</td>
      <td style="text-align: center">L</td>
      <td style="text-align: center">108</td>
      <td style="text-align: center">0x6C</td>
      <td style="text-align: center">l</td>
    </tr>
    <tr>
      <td style="text-align: center">13</td>
      <td style="text-align: center">0x0D</td>
      <td style="text-align: center">CR</td>
      <td style="text-align: center">45</td>
      <td style="text-align: center">0x2D</td>
      <td style="text-align: center">-</td>
      <td style="text-align: center">77</td>
      <td style="text-align: center">0x4D</td>
      <td style="text-align: center">M</td>
      <td style="text-align: center">109</td>
      <td style="text-align: center">0x6D</td>
      <td style="text-align: center">m</td>
    </tr>
    <tr>
      <td style="text-align: center">14</td>
      <td style="text-align: center">0x0E</td>
      <td style="text-align: center">SO</td>
      <td style="text-align: center">46</td>
      <td style="text-align: center">0x2E</td>
      <td style="text-align: center">.</td>
      <td style="text-align: center">78</td>
      <td style="text-align: center">0x4E</td>
      <td style="text-align: center">N</td>
      <td style="text-align: center">110</td>
      <td style="text-align: center">0x6E</td>
      <td style="text-align: center">n</td>
    </tr>
    <tr>
      <td style="text-align: center">15</td>
      <td style="text-align: center">0x0F</td>
      <td style="text-align: center">SI</td>
      <td style="text-align: center">47</td>
      <td style="text-align: center">0x2F</td>
      <td style="text-align: center">/</td>
      <td style="text-align: center">79</td>
      <td style="text-align: center">0x4F</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">111</td>
      <td style="text-align: center">0x6F</td>
      <td style="text-align: center">o</td>
    </tr>
    <tr>
      <td style="text-align: center">16</td>
      <td style="text-align: center">0x10</td>
      <td style="text-align: center">DLE</td>
      <td style="text-align: center">48</td>
      <td style="text-align: center">0x30</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">80</td>
      <td style="text-align: center">0x50</td>
      <td style="text-align: center">P</td>
      <td style="text-align: center">112</td>
      <td style="text-align: center">0x70</td>
      <td style="text-align: center">p</td>
    </tr>
    <tr>
      <td style="text-align: center">17</td>
      <td style="text-align: center">0x11</td>
      <td style="text-align: center">DC1</td>
      <td style="text-align: center">49</td>
      <td style="text-align: center">0x31</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">81</td>
      <td style="text-align: center">0x51</td>
      <td style="text-align: center">Q</td>
      <td style="text-align: center">113</td>
      <td style="text-align: center">0x71</td>
      <td style="text-align: center">q</td>
    </tr>
    <tr>
      <td style="text-align: center">18</td>
      <td style="text-align: center">0x12</td>
      <td style="text-align: center">DC2</td>
      <td style="text-align: center">50</td>
      <td style="text-align: center">0x32</td>
      <td style="text-align: center">2</td>
      <td style="text-align: center">82</td>
      <td style="text-align: center">0x52</td>
      <td style="text-align: center">R</td>
      <td style="text-align: center">114</td>
      <td style="text-align: center">0x72</td>
      <td style="text-align: center">r</td>
    </tr>
    <tr>
      <td style="text-align: center">19</td>
      <td style="text-align: center">0x13</td>
      <td style="text-align: center">DC3</td>
      <td style="text-align: center">51</td>
      <td style="text-align: center">0x33</td>
      <td style="text-align: center">3</td>
      <td style="text-align: center">83</td>
      <td style="text-align: center">0x53</td>
      <td style="text-align: center">S</td>
      <td style="text-align: center">115</td>
      <td style="text-align: center">0x73</td>
      <td style="text-align: center">s</td>
    </tr>
    <tr>
      <td style="text-align: center">20</td>
      <td style="text-align: center">0x14</td>
      <td style="text-align: center">DC4</td>
      <td style="text-align: center">52</td>
      <td style="text-align: center">0x34</td>
      <td style="text-align: center">4</td>
      <td style="text-align: center">84</td>
      <td style="text-align: center">0x54</td>
      <td style="text-align: center">T</td>
      <td style="text-align: center">116</td>
      <td style="text-align: center">0x74</td>
      <td style="text-align: center">t</td>
    </tr>
    <tr>
      <td style="text-align: center">21</td>
      <td style="text-align: center">0x15</td>
      <td style="text-align: center">NAK</td>
      <td style="text-align: center">53</td>
      <td style="text-align: center">0x35</td>
      <td style="text-align: center">5</td>
      <td style="text-align: center">85</td>
      <td style="text-align: center">0x55</td>
      <td style="text-align: center">U</td>
      <td style="text-align: center">117</td>
      <td style="text-align: center">0x75</td>
      <td style="text-align: center">u</td>
    </tr>
    <tr>
      <td style="text-align: center">22</td>
      <td style="text-align: center">0x16</td>
      <td style="text-align: center">SYN</td>
      <td style="text-align: center">54</td>
      <td style="text-align: center">0x36</td>
      <td style="text-align: center">6</td>
      <td style="text-align: center">86</td>
      <td style="text-align: center">0x56</td>
      <td style="text-align: center">V</td>
      <td style="text-align: center">118</td>
      <td style="text-align: center">0x76</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: center">23</td>
      <td style="text-align: center">0x17</td>
      <td style="text-align: center">ETB</td>
      <td style="text-align: center">55</td>
      <td style="text-align: center">0x37</td>
      <td style="text-align: center">7</td>
      <td style="text-align: center">87</td>
      <td style="text-align: center">0x57</td>
      <td style="text-align: center">W</td>
      <td style="text-align: center">119</td>
      <td style="text-align: center">0x77</td>
      <td style="text-align: center">w</td>
    </tr>
    <tr>
      <td style="text-align: center">24</td>
      <td style="text-align: center">0x18</td>
      <td style="text-align: center">CAN</td>
      <td style="text-align: center">56</td>
      <td style="text-align: center">0x38</td>
      <td style="text-align: center">8</td>
      <td style="text-align: center">88</td>
      <td style="text-align: center">0x58</td>
      <td style="text-align: center">X</td>
      <td style="text-align: center">120</td>
      <td style="text-align: center">0x78</td>
      <td style="text-align: center">x</td>
    </tr>
    <tr>
      <td style="text-align: center">25</td>
      <td style="text-align: center">0x19</td>
      <td style="text-align: center">EM</td>
      <td style="text-align: center">57</td>
      <td style="text-align: center">0x39</td>
      <td style="text-align: center">9</td>
      <td style="text-align: center">89</td>
      <td style="text-align: center">0x59</td>
      <td style="text-align: center">Y</td>
      <td style="text-align: center">121</td>
      <td style="text-align: center">0x79</td>
      <td style="text-align: center">y</td>
    </tr>
    <tr>
      <td style="text-align: center">26</td>
      <td style="text-align: center">0x1A</td>
      <td style="text-align: center">SUB</td>
      <td style="text-align: center">58</td>
      <td style="text-align: center">0x3A</td>
      <td style="text-align: center">:</td>
      <td style="text-align: center">90</td>
      <td style="text-align: center">0x5A</td>
      <td style="text-align: center">Z</td>
      <td style="text-align: center">122</td>
      <td style="text-align: center">0x7A</td>
      <td style="text-align: center">z</td>
    </tr>
    <tr>
      <td style="text-align: center">27</td>
      <td style="text-align: center">0x1B</td>
      <td style="text-align: center">ESC</td>
      <td style="text-align: center">59</td>
      <td style="text-align: center">0x3B</td>
      <td style="text-align: center">;</td>
      <td style="text-align: center">91</td>
      <td style="text-align: center">0x5B</td>
      <td style="text-align: center">[</td>
      <td style="text-align: center">123</td>
      <td style="text-align: center">0x7B</td>
      <td style="text-align: center">{</td>
    </tr>
    <tr>
      <td style="text-align: center">28</td>
      <td style="text-align: center">0x1C</td>
      <td style="text-align: center">FS</td>
      <td style="text-align: center">60</td>
      <td style="text-align: center">0x3C</td>
      <td style="text-align: center">&lt;</td>
      <td style="text-align: center">92</td>
      <td style="text-align: center">0x5C</td>
      <td style="text-align: center">₩</td>
      <td style="text-align: center">124</td>
      <td style="text-align: center">0x7C</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">29</td>
      <td style="text-align: center">0x1D</td>
      <td style="text-align: center">GS</td>
      <td style="text-align: center">61</td>
      <td style="text-align: center">0x3D</td>
      <td style="text-align: center">=</td>
      <td style="text-align: center">93</td>
      <td style="text-align: center">0x5D</td>
      <td style="text-align: center">]</td>
      <td style="text-align: center">125</td>
      <td style="text-align: center">0x7D</td>
      <td style="text-align: center">}</td>
    </tr>
    <tr>
      <td style="text-align: center">30</td>
      <td style="text-align: center">0x1E</td>
      <td style="text-align: center">RS</td>
      <td style="text-align: center">62</td>
      <td style="text-align: center">0x3E</td>
      <td style="text-align: center">&gt;</td>
      <td style="text-align: center">94</td>
      <td style="text-align: center">0x5E</td>
      <td style="text-align: center">^</td>
      <td style="text-align: center">126</td>
      <td style="text-align: center">0x7E</td>
      <td style="text-align: center">~</td>
    </tr>
    <tr>
      <td style="text-align: center">31</td>
      <td style="text-align: center">0x1F</td>
      <td style="text-align: center">US</td>
      <td style="text-align: center">63</td>
      <td style="text-align: center">0x3F</td>
      <td style="text-align: center">?</td>
      <td style="text-align: center">95</td>
      <td style="text-align: center">0x5F</td>
      <td style="text-align: center">_</td>
      <td style="text-align: center">127</td>
      <td style="text-align: center">0x7F</td>
      <td style="text-align: center">DEL</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<h3><strong>⭐⭐⭐</strong></h3>
<ul>
  <li>알파벳 <strong>A~Z: 65 ~ 90</strong></li>
  <li>알파벳 <strong>a~z: 97 ~ 122</strong>
<br />
<br /></li>
</ul>

<h4 id="문자--숫자">문자 → 숫자</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"A"</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">ch</span> <span class="o">=</span> <span class="n">str</span><span class="o">.**</span><span class="n">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)**;</span>
<span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">ch</span><span class="o">;</span> <span class="c1">// 65</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="숫자--문자">숫자 → 문자</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">97</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">ch</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="n">num</span><span class="o">;</span> <span class="c1">// a</span>
</code></pre></div></div>
<p><br /></p>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Method" /><category term="AsciiCode" /><summary type="html"><![CDATA[아스키코드 문자 ↔ 숫자]]></summary></entry><entry><title type="html">소수 판별</title><link href="http://localhost:4000/wiki/2022/09/24/prime-number.html" rel="alternate" type="text/html" title="소수 판별" /><published>2022-09-24T00:00:00+09:00</published><updated>2022-09-24T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/09/24/prime-number</id><content type="html" xml:base="http://localhost:4000/wiki/2022/09/24/prime-number.html"><![CDATA[<h3 id="소수-판별">소수 판별</h3>

<h4 id="소수">소수</h4>
<ul>
  <li>1과 자기 자신으로만 나누어지는 숫자
<br />
<br /></li>
</ul>

<h4 id="0부터-n까지-소수-구하기">0부터 N까지 소수 구하기</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="no">N</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="kt">int</span><span class="o">[]</span> <span class="n">check</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">check</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">result</span><span class="o">++;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="no">N</span><span class="o">;</span> <span class="n">j</span> <span class="o">+=</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">check</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
 <span class="o">}</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="해당-숫자가-소수인지-판별">해당 숫자가 소수인지 판별</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isPrime</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>

	<span class="c1">// 2부터 시작해서 해당 숫자까지 약수가 있으면 false</span>
	<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">num</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c1">// 약수가 없으면 true</span>
	<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="math-클래스의-sqrt-메소드">Math 클래스의 sqrt() 메소드</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">sqrt()</code>: 2부터 루트 <code class="language-plaintext highlighter-rouge">n</code>까지의 범위에서 소수를 체크해주는 함수</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="no">N</span><span class="o">)</span> <span class="o">{</span>
	<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="no">N</span><span class="o">);</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="no">N</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Method" /><category term="Algorithm" /><summary type="html"><![CDATA[소수 판별]]></summary></entry><entry><title type="html">진수 변환</title><link href="http://localhost:4000/wiki/2022/09/16/n-number-convert.html" rel="alternate" type="text/html" title="진수 변환" /><published>2022-09-16T00:00:00+09:00</published><updated>2022-09-16T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/09/16/n-number-convert</id><content type="html" xml:base="http://localhost:4000/wiki/2022/09/16/n-number-convert.html"><![CDATA[<h3 id="진수-변환">진수 변환</h3>

<h4 id="10진수--2816진수">10진수 → 2/8/16진수</h4>

<table>
  <thead>
    <tr>
      <th>return type</th>
      <th>class</th>
      <th>method</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>static String</td>
      <td>java.lang.Integer</td>
      <td>toBinaryString(int i)</td>
      <td>10진수 → 2진수</td>
    </tr>
    <tr>
      <td>static String</td>
      <td>java.lang.Integer</td>
      <td>toOctalString(int i)</td>
      <td>10진수 → 8진수</td>
    </tr>
    <tr>
      <td>static String</td>
      <td>java.lang.Integer</td>
      <td>toHexaString(int i)</td>
      <td>10진수 → 16진수</td>
    </tr>
  </tbody>
</table>

<p>➕ 위의 세 메소드는 파라미터로 정수 뿐만 아니라 정수 두 개를 비트 연산자(OR)로 계산할 수도 있다.</p>

<h4 id="10진수--n진수">10진수 → N진수</h4>

<table>
  <thead>
    <tr>
      <th>return type</th>
      <th>class</th>
      <th>method</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>static String</td>
      <td>java.lang.Integer</td>
      <td>toString(int n, int radix)</td>
      <td>10진수 → N진수</td>
    </tr>
  </tbody>
</table>

<p><strong>예시</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">decimal</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">binary</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBInaryString</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
<span class="nc">String</span> <span class="n">octial</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toOctalString</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
<span class="nc">String</span> <span class="n">hexa</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toHexaString</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"10진수: "</span> <span class="o">+</span> <span class="n">decimal</span><span class="o">);</span> <span class="c1">// 10</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"2진수: "</span> <span class="o">+</span> <span class="n">binary</span><span class="o">);</span>  <span class="c1">// 1010</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"8진수: "</span> <span class="o">+</span> <span class="n">octial</span><span class="o">);</span> <span class="c1">// 12</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"16진수: "</span> <span class="o">+</span> <span class="n">hexa</span><span class="o">);</span> <span class="c1">// a</span>

<span class="cm">/* 비트 연산자로 계산하기 */</span>
<span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="mi">10</span> <span class="o">|</span> <span class="mi">12</span><span class="o">);</span> <span class="c1">// 1110</span>
</code></pre></div></div>
<p><br /></p>

<h3 id="2816진수--10진수">2/8/16진수 → 10진수</h3>

<table>
  <thead>
    <tr>
      <th>return type</th>
      <th>class</th>
      <th>method</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>static int</td>
      <td>java.lang.Integer</td>
      <td>parseInt(String s)</td>
      <td>문자열 → 10진수 int (default 10진수)</td>
    </tr>
    <tr>
      <td>static int</td>
      <td>java.lang.Integer</td>
      <td>parseInt(String s, int radix)</td>
      <td>문자열을 변환할 진수(radix)로 읽어 int로 리턴</td>
    </tr>
  </tbody>
</table>

<h3 id="n진수--10진수">N진수 → 10진수</h3>

<table>
  <thead>
    <tr>
      <th>return type</th>
      <th>class</th>
      <th>method</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>static int</td>
      <td>java.lang.Integer</td>
      <td>parseInt(String, s, int radix)</td>
      <td>N진수 → 10진수</td>
    </tr>
  </tbody>
</table>

<p><strong>예시</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">binary</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="s">"1010"</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">octial</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="s">"12"</span><span class="o">,</span> <span class="mi">8</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">hexa</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="s">"A"</span><span class="o">,</span> <span class="mi">16</span><span class="o">);</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"2진수 -&gt; 10진수: "</span> <span class="o">+</span> <span class="n">binary</span><span class="o">);</span> <span class="c1">// 10</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"8진수 -&gt; 10진수: "</span> <span class="o">+</span> <span class="n">octial</span><span class="o">);</span> <span class="c1">// 10</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"16진수 -&gt; 10진수: "</span> <span class="o">+</span> <span class="n">hexa</span><span class="o">);</span> <span class="c1">// 10</span>
</code></pre></div></div>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="Method" /><summary type="html"><![CDATA[진수 변환]]></summary></entry><entry><title type="html">문자열 치환</title><link href="http://localhost:4000/wiki/2022/09/15/string-replacement.html" rel="alternate" type="text/html" title="문자열 치환" /><published>2022-09-15T00:00:00+09:00</published><updated>2022-09-15T00:00:00+09:00</updated><id>http://localhost:4000/wiki/2022/09/15/string-replacement</id><content type="html" xml:base="http://localhost:4000/wiki/2022/09/15/string-replacement.html"><![CDATA[<h3 id="문자열-치환">문자열 치환</h3>

<h4 id="종류">종류</h4>
<ol>
  <li>replace()</li>
  <li>replaceAll()</li>
  <li>replaceFirst()
<br /></li>
</ol>

<h3 id="replacecharsequence-target-charsequence-replacement">replace(CharSequence target, CharSequence replacement)</h3>
<ul>
  <li>일치하는 문자열(target)을 대체할 문자(replacement)로 치환한다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"가/나/다/라/마/바/사"</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">"/"</span><span class="o">,</span> <span class="s">","</span><span class="o">));</span> <span class="c1">// 가,나,다,라,마,바,사</span>
</code></pre></div>    </div>
    <p><br /></p>
  </li>
</ul>

<h3 id="replaceallstring-regex-string-replacement">replaceAll(String regex, String replacement)</h3>
<ul>
  <li>일치하는 정규 표현식(regex)을 대체할 문자열(replacement)로 <strong>전부</strong> 치환한다.
    <ul>
      <li>replace()와 유사하지만, <code class="language-plaintext highlighter-rouge">.</code>(온점) 같은 경우 정규 표현식으로 모든 문자를 의미하기 때문에 모든 문자열이 치환될 수 있다.
        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"가.나.다.라.마.바.사"</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str2</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">"."</span><span class="o">,</span> <span class="s">","</span><span class="o">));</span> <span class="c1">// 가,나,다,라,마,바,사</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str2</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"."</span><span class="o">,</span> <span class="s">","</span><span class="o">));</span> <span class="c1">// ,,,,,,,,,,,,,</span>
</code></pre></div>        </div>
        <p><br /></p>
      </li>
    </ul>
  </li>
</ul>

<h3 id="replacefirststring-target-string-replacement">replaceFirst(String target, String replacement)</h3>
<ul>
  <li>첫번째로 일치하는 문자열(target)를 대체할 문자(replacement)로 치환한다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"가/나/다/라/마/바/사"</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"/"</span><span class="o">,</span> <span class="s">","</span><span class="o">));</span> <span class="c1">// 가,나/다/라/마/바/사</span>
</code></pre></div>    </div>
    <p><br /></p>
  </li>
</ul>

<p><strong>실무 사용 예시</strong>
→ 해시태그가 포함되어 있는 내용에 바꾸고 싶은 내용이 해시태그마다 다를 때 사용함</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">contents</span> <span class="o">=</span> <span class="s">"..."</span><span class="o">;</span>
<span class="n">contents</span> <span class="o">=</span> <span class="n">contents</span><span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"#"</span><span class="o">,</span> <span class="n">str1</span><span class="o">)</span>
                <span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"#"</span><span class="o">,</span> <span class="n">str2</span><span class="o">)</span>
                <span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"#"</span><span class="o">,</span> <span class="n">str3</span><span class="o">)</span>
                <span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"#"</span><span class="o">,</span> <span class="n">str4</span><span class="o">)</span>
                <span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"#"</span><span class="o">,</span> <span class="n">str5</span><span class="o">);</span>
</code></pre></div></div>
<p><br /></p>

<p>참고</p>
<ul>
  <li><a href="https://coding-factory.tistory.com/128">https://coding-factory.tistory.com/128</a></li>
</ul>]]></content><author><name>Dajeong Park</name></author><category term="wiki" /><category term="Java" /><category term="String" /><category term="Method" /><summary type="html"><![CDATA[문자열 치환]]></summary></entry></feed>