I"Q<p>현재 회사에서는 Mybatis에 VO를 사용하고 있고, 개인적으로 프로젝트에서는 JPA에 entity를 사용한 적이 있는데 정확하게 entity, vo 그리고 dto에는 무슨 차이가 있는지 궁금해졌다.
김영한님의 강의와 최근 보기 시작한 스프링 부트와 AWS로 혼자 구현하는 웹 서비스 책을 보면서 entity는 테이블과 매핑되기 때문에 최대한 수정하지 말고, 데이터를 주고 받을 때는 dto를 사용하는 것이라고 이해했다.
실제로도 코드를 작성하다보니 entity를 계속 변경해서 다른 클래스까지 계속 수정하는 것보다 dto 클래스만 수정하는 게 유지보수 방면에서도 좋다는 걸 느꼈다.</p>

<h3 id="entity">Entity</h3>
<p>Entity는 데이터베이스의 테이블과 매핑되는 가장 핵심적인 객체로 식별자를 가진다는 특징이 있다.</p>

<h3 id="vovalue-object">VO(Value Object)</h3>
<p>VO는 값 자체를 표현하는 객체로, Entity와 달리 식별자를 가지지 않기 때문에 단 하나의 데이터라도 변경하게 되면 다른 객체가 되기 때문에 일반적으로 불변 객체로 사용한다.</p>

<h3 id="dtodata-transfer-object">DTO(Data Transfer Object)</h3>
<p>DTO는 말 그대로 데이터 교환을 위한 객체로, getter/setter를 사용할 수 있다.</p>
:ET